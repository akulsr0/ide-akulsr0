{"version":3,"sources":["context/index.js","styles/index.js","constants/index.js","utils/index.js","components/Editor.js","components/Output.js","App.js","index.js","../node_modules/typescript/lib sync","utils/output.js"],"names":["AppContext","createContext","AppContextProvider","children","useState","language","setLanguage","inputCode","setInputCode","isDarkMode","setIsDarkMode","Provider","value","EDITOR_STYLES","wrapper","display","flexDirection","height","topbar","flex","padding","topbarLeft","alignItems","topbarTitle","fontWeight","userSelect","link","marginLeft","iconImage","width","shareLink","cursor","OUTPUT_STYLES","backgroundColor","LINKS","url","img","alt","COLORS","data","cb","axios","post","code_snippet","is_dark_theme","then","res","catch","err","fetchLinkData","id","get","params","Editor","codeSnippetId","useContext","darkModeCheckboxRef","useRef","isCreatingLink","setIsCreatingLink","useClippy","setClipboard","useEffect","window","alert","icons","map","href","style","rel","target","src","innerWidth","className","ref","type","checked","onChange","current","e","toLowerCase","onClick","newLink","disabled","theme","options","fontSize","val","Output","output","setOutput","isError","setIsError","getOutput","result","_isError","color","out","index","App","split","defaultSize","defaultProps","ReactDOM","render","StrictMode","path","props","match","document","getElementById","webpackEmptyContext","req","Error","code","keys","resolve","module","exports","getJSOutput","_log","console","log","logs","values","forEach","outputArray","isFunction","name","JSON","stringify","outputString","join","push","eval","message","getTSOutput","compilerOptions","typescript","CommonJS","reportDiagnostics","transpiledCode","isEmpty","diagnostics","outputText","error","messageText","getPythonOutput"],"mappings":"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","file":"static/js/main.3a988ce8.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AppContext = createContext();\n\nconst AppContextProvider = ({ children }) => {\n  const [language, setLanguage] = useState('javascript');\n  const [inputCode, setInputCode] = useState('');\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  return (\n    <AppContext.Provider\n      value={{\n        inputCode,\n        setInputCode,\n        language,\n        setLanguage,\n        isDarkMode,\n        setIsDarkMode,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nAppContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { AppContext, AppContextProvider };\n","const EDITOR_STYLES = {\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n  },\n  topbar: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    padding: 10,\n  },\n  topbarLeft: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center',\n  },\n  topbarTitle: {\n    fontWeight: 700,\n    userSelect: 'none',\n  },\n  link: {\n    marginLeft: 10,\n  },\n  iconImage: {\n    width: 24,\n    height: 24,\n    userSelect: 'none',\n  },\n  shareLink: {\n    cursor: 'pointer',\n  },\n};\n\nconst OUTPUT_STYLES = {\n  wrapper: {\n    height: '100vh',\n    backgroundColor: '#f3f3f3',\n    padding: 10,\n  },\n};\n\nexport { EDITOR_STYLES, OUTPUT_STYLES };\n","const LINKS = [\n  {\n    url: 'http://akul.codes',\n    img: 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c4/Globe_icon.svg/600px-Globe_icon.svg.png',\n    alt: 'website',\n  },\n  {\n    url: 'https://github.com/akulsr0/ide-akulsr0',\n    img: 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Octicons-mark-github.svg/2048px-Octicons-mark-github.svg.png',\n    alt: 'github',\n  },\n];\n\nconst COLORS = {\n  DARK_COLOR: '#2E2E2E',\n  LIGHT_COLOR: '#F3F3F3',\n};\n\nconst MIN_INNER_WIDTH = 968;\n\nexport { LINKS, COLORS, MIN_INNER_WIDTH };\n","import axios from 'axios';\n\nconst shareLink = (data, cb) => {\n  const url = 'http://akul.codes/code/';\n  axios\n    .post(url, {\n      language: data.language,\n      code_snippet: data.inputCode,\n      is_dark_theme: data.isDarkMode,\n    })\n    .then((res) => cb(null, res.data))\n    .catch((err) => cb(err, null));\n};\n\nconst fetchLinkData = (id, cb) => {\n  const url = 'http://akul.codes/code/';\n  axios\n    .get(url, { params: { id } })\n    .then((res) => cb(null, res.data))\n    .catch((err) => cb(err, null));\n};\n\nexport { shareLink, fetchLinkData };\nexport default { shareLink, fetchLinkData };\n","import React, { useEffect, useRef, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport map from 'lodash/map';\nimport CodeEditor from '@monaco-editor/react';\nimport useClippy from 'use-clippy';\nimport { AppContext } from '../context';\nimport { EDITOR_STYLES } from '../styles';\nimport { LINKS, MIN_INNER_WIDTH } from '../constants';\nimport { fetchLinkData, shareLink } from '../utils';\n\nconst Editor = ({ codeSnippetId }) => {\n  const {\n    inputCode,\n    setInputCode,\n    language,\n    setLanguage,\n    isDarkMode,\n    setIsDarkMode,\n  } = useContext(AppContext);\n\n  const darkModeCheckboxRef = useRef(null);\n  const [isCreatingLink, setIsCreatingLink] = useState(false);\n  const [, setClipboard] = useClippy();\n\n  useEffect(() => {\n    if (codeSnippetId) {\n      fetchLinkData(codeSnippetId, (err, data) => {\n        if (err) {\n          window.alert('Link is not valid');\n          return;\n        }\n        setInputCode(data.code_snippet);\n        setIsDarkMode(data.is_dark_theme);\n        setLanguage(data.language);\n      });\n    }\n  }, []);\n\n  const onPressShareLink = () => {\n    if (isCreatingLink) {\n      window.alert('Already creating link, please wait!');\n      return;\n    }\n    setIsCreatingLink(true);\n    const payload = { language, isDarkMode, inputCode };\n    shareLink(payload, (err, data) => {\n      setIsCreatingLink(false);\n      if (data) {\n        const newLink = `https://ide.akul.codes/${data.id}`;\n        setClipboard(newLink);\n        window.alert(\n          `Your link is created and copied to clipboard\\n ${newLink}`,\n        );\n      }\n    });\n  };\n\n  const icons = map(LINKS, (link) => (\n    <a\n      key={link.alt}\n      href={link.url}\n      style={EDITOR_STYLES.link}\n      rel=\"noreferrer\"\n      target=\"_blank\"\n    >\n      <img src={link.img} alt={link.alt} style={EDITOR_STYLES.iconImage} />\n    </a>\n  ));\n\n  return (\n    <div\n      style={{\n        ...EDITOR_STYLES.wrapper,\n        width: window.innerWidth > MIN_INNER_WIDTH ? 'unset' : '100%',\n      }}\n    >\n      <div\n        style={{\n          ...EDITOR_STYLES.topbar,\n          flexDirection: window.innerWidth > MIN_INNER_WIDTH ? 'row' : 'column',\n        }}\n      >\n        <div style={EDITOR_STYLES.topbarLeft}>\n          <span style={EDITOR_STYLES.topbarTitle}>Code Playgrounds</span>\n          {icons}\n        </div>\n        <div>\n          <span>Dark Mode: </span>\n          {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n          <label className=\"switch\">\n            <input\n              ref={darkModeCheckboxRef}\n              type=\"checkbox\"\n              checked={isDarkMode}\n              onChange={() => {\n                setIsDarkMode(darkModeCheckboxRef.current.checked);\n              }}\n            />\n            <span className=\"slider\" />\n          </label>\n          <span>Language: </span>\n          <select\n            onChange={(e) => setLanguage(e.target.value)}\n            value={language.toLowerCase()}\n          >\n            <option value=\"javascript\">Javascript</option>\n            <option value=\"typescript\">Typescript</option>\n            {/* <option value=\"python\">Python</option> */}\n          </select>\n          &nbsp;\n          <button\n            type=\"button\"\n            style={EDITOR_STYLES.shareLink}\n            onClick={onPressShareLink}\n            disabled={isCreatingLink}\n          >\n            Share Link\n          </button>\n        </div>\n      </div>\n      <CodeEditor\n        height=\"100%\"\n        language={language}\n        theme={isDarkMode ? 'vs-dark' : 'vs-light'}\n        options={{ fontSize: 16 }}\n        value={inputCode}\n        onChange={(val) => setInputCode(val)}\n      />\n    </div>\n  );\n};\n\nEditor.propTypes = {\n  codeSnippetId: PropTypes.string.isRequired,\n};\n\nexport default Editor;\n","import React, { useContext, useEffect, useState } from 'react';\nimport map from 'lodash/map';\nimport { AppContext } from '../context';\nimport { OUTPUT_STYLES } from '../styles';\nimport { getOutput } from '../utils/output';\nimport { COLORS } from '../constants';\n\nconst Output = () => {\n  const { inputCode, language, isDarkMode } = useContext(AppContext);\n  const [output, setOutput] = useState([]);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const { result, isError: _isError } = getOutput(inputCode, language);\n    setOutput(result);\n    setIsError(_isError);\n  }, [inputCode, language]);\n\n  return (\n    <div\n      style={{\n        ...OUTPUT_STYLES.wrapper,\n        backgroundColor: isDarkMode ? COLORS.DARK_COLOR : COLORS.LIGHT_COLOR,\n        color: isDarkMode ? COLORS.LIGHT_COLOR : COLORS.DARK_COLOR,\n      }}\n    >\n      {map(output, (out, index) => (\n        <div key={index}>\n          <span style={{ fontSize: 20, color: isError && 'red' }}>{out}</span>\n          <br />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Output;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport SplitPane from 'react-split-pane';\nimport Editor from './components/Editor';\nimport Output from './components/Output';\nimport { AppContextProvider } from './context';\nimport { MIN_INNER_WIDTH } from './constants';\n\nfunction App({ codeSnippetId }) {\n  const width = window.innerWidth;\n  return (\n    <AppContextProvider>\n      <div>\n        <SplitPane\n          split={width > MIN_INNER_WIDTH ? 'vertical' : 'horizontal'}\n          defaultSize=\"70%\"\n        >\n          <Editor codeSnippetId={codeSnippetId} />\n          <Output />\n        </SplitPane>\n      </div>\n    </AppContextProvider>\n  );\n}\n\nApp.defaultProps = {\n  codeSnippetId: '',\n};\n\nApp.propTypes = {\n  codeSnippetId: PropTypes.string,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Route path=\"/\">\n        <App />\n      </Route>\n      <Route\n        path=\"/:id\"\n        render={(props) => <App codeSnippetId={props.match.params.id} />}\n      />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 69;","import isFunction from 'lodash/isFunction';\nimport isEmpty from 'lodash/isEmpty';\nimport map from 'lodash/map';\nimport join from 'lodash/join';\n// eslint-disable-next-line\nimport * as typescript from 'typescript';\n\nconst getJSOutput = (code) => {\n  // Original console.log\n  const _log = console.log;\n\n  // Logs Array: To Preserve Logs\n  const logs = [];\n\n  // Update console.log to return preserved logged string\n  console.log = (...values) => {\n    // Log value in console\n    values.forEach((val) => _log(val));\n    // Array of values logged\n    const outputArray = map(values, (val) => {\n      if (isFunction(val)) {\n        return `Function ${val.name}`;\n      }\n      return JSON.stringify(val);\n    });\n    // Logged String\n    const outputString = join(outputArray, ' ');\n    // Complete logs including previous logs\n    logs.push(outputString);\n  };\n\n  try {\n    // eslint-disable-next-line no-eval\n    eval(code);\n    return { result: logs, isError: false };\n  } catch (e) {\n    return { result: [e.message], isError: true };\n  }\n};\n\nconst getTSOutput = (code) => {\n  const options = {\n    compilerOptions: {\n      module: typescript.ModuleKind.CommonJS,\n    },\n    reportDiagnostics: true,\n  };\n  const transpiledCode = typescript.transpileModule(code, options);\n\n  if (isEmpty(transpiledCode?.diagnostics)) {\n    const jsoutput = getJSOutput(transpiledCode?.outputText);\n    return jsoutput;\n  }\n  const errorMessage = map(\n    transpiledCode?.diagnostics,\n    (error) => `Error: ${error.messageText}`,\n  );\n  return { result: [errorMessage], isError: true };\n};\n\nconst getPythonOutput = (code) => {\n  const result = { result: code, isError: false };\n  return result;\n};\n\nconst getOutput = (code, language) => {\n  switch (language) {\n    case 'javascript':\n      return getJSOutput(code);\n    case 'typescript':\n      return getTSOutput(code);\n    case 'python':\n      return getPythonOutput(code);\n    default:\n      return getJSOutput(code);\n  }\n};\n\nexport { getOutput };\nexport default { getOutput };\n"],"sourceRoot":""}